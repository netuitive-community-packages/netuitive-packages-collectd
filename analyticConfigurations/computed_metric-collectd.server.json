{
  "analyticConfiguration": {
    "metrics": [
      {
        "match": "netuitive.collectd.memory.total",
        "properties": {
          "expression": "data['memory.memory-buffered.value'].actual + data['memory.memory-cached.value'].actual + data['memory.memory-free.value'].actual + data['memory.memory-used.value'].actual",
          "fqn": "netuitive.collectd.memory.total",
          "name": "Total Memory"
        }
      },
      {
        "match": "netuitive.collectd.memory.utilizationpercent",
        "properties": {
          "expression": "100 - (data['memory.memory-buffered.value'].actual + data['memory.memory-cached.value'].actual + data['memory.memory-free.value'].actual) / data['netuitive.collectd.memory.total'].actual * 100",
          "fqn": "netuitive.collectd.memory.utilizationpercent",
          "name": "Memory Utilization Percent"
        }
      },
      {
        "match": "netuitive.collectd.processes.total",
        "properties": {
          "expression": "data['processes.ps_state-blocked.value'].actual + data['processes.ps_state-paging.value'].actual + data['processes.ps_state-running.value'].actual + data['processes.ps_state-sleeping.value'].actual + data['processes.ps_state-stopped.value'].actual + data['processes.ps_state-zombies.value'].actual",
          "fqn": "netuitive.collectd.processes.total",
          "name": "Total Processes"
        }
      },
      {
        "match": "netuitive.collectd.processes.blockedpercent",
        "properties": {
          "expression": "(data['processes.ps_state-blocked.value'].actual / data['netuitive.collectd.processes.total'].actual) * 100",
          "fqn": "netuitive.collectd.processes.blockedpercent",
          "name": "Blocked Processes Percent"
        }
      },
      {
        "match": "netuitive.collectd.processes.pagingpercent",
        "properties": {
          "expression": "(data['processes.ps_state-paging.value'].actual / data['netuitive.collectd.processes.total'].actual) * 100",
          "fqn": "netuitive.collectd.processes.pagingpercent",
          "name": "Paging Processes Percent"
        }
      },
      {
        "match": "netuitive.collectd.processes.runningpercent",
        "properties": {
          "expression": "(data['processes.ps_state-running.value'].actual / data['netuitive.collectd.processes.total'].actual) * 100",
          "fqn": "netuitive.collectd.processes.runningpercent",
          "name": "Running Processes Percent"
        }
      },
      {
        "match": "netuitive.collectd.processes.sleepingpercent",
        "properties": {
          "expression": "(data['processes.ps_state-sleeping.value'].actual / data['netuitive.collectd.processes.total'].actual) * 100",
          "fqn": "netuitive.collectd.processes.sleepingpercent",
          "name": "Sleeping Processes Percent"
        }
      },
      {
        "match": "netuitive.collectd.processes.stoppedpercent",
        "properties": {
          "expression": "(data['processes.ps_state-blocked.value'].actual / data['netuitive.collectd.processes.total'].actual) * 100",
          "fqn": "netuitive.collectd.processes.stoppedpercent",
          "name": "Stopped Processes Percent"
        }
      },
      {
        "match": "netuitive.collectd.processes.zombiepercent",
        "properties": {
          "expression": "(data['processes.ps_state-zombies.value'].actual / data['netuitive.collectd.processes.total'].actual) * 100",
          "fqn": "netuitive.collectd.processes.zombiepercent",
          "name": "Zombie Processes Percent"
        }
      },
      {
        "match": "netuitive.collectd.cpu-avg.cpu-idle",
        "properties": {
          "expression": "data.avg('cpu-.*.cpu-idle.value')",
          "fqn": "netuitive.collectd.cpu-avg.cpu-idle"
        }
      },
      {
        "match": "netuitive.collectd.cpu-avg.cpu-interrupt",
        "properties": {
          "expression": "data.avg('cpu-.*.cpu-interrupt.value')",
          "fqn": "netuitive.collectd.cpu-avg.cpu-interrupt"
        }
      },
      {
        "match": "netuitive.collectd.cpu-avg.cpu-nice",
        "properties": {
          "expression": "data.avg('cpu-.*.cpu-nice.value')",
          "fqn": "netuitive.collectd.cpu-avg.cpu-nice"
        }
      },
      {
        "match": "netuitive.collectd.cpu-avg.cpu-softirq",
        "properties": {
          "expression": "data.avg('cpu-.*.cpu-softirq.value')",
          "fqn": "netuitive.collectd.cpu-avg.cpu-softirq"
        }
      },
      {
        "match": "netuitive.collectd.cpu-avg.cpu-steal",
        "properties": {
          "expression": "data.avg('cpu-.*.cpu-steal.value')",
          "fqn": "netuitive.collectd.cpu-avg.cpu-steal"
        }
      },
      {
        "match": "netuitive.collectd.cpu-avg.cpu-system",
        "properties": {
          "expression": "data.avg('cpu-.*.cpu-system.value')",
          "fqn": "netuitive.collectd.cpu-avg.cpu-system"
        }
      },
      {
        "match": "netuitive.collectd.cpu-avg.cpu-user",
        "properties": {
          "expression": "data.avg('cpu-.*.cpu-user.value')",
          "fqn": "netuitive.collectd.cpu-avg.cpu-user"
        }
      },
      {
        "match": "netuitive.collectd.cpu-avg.cpu-wait",
        "properties": {
          "expression": "data.avg('cpu-.*.cpu-wait.value')",
          "fqn": "netuitive.collectd.cpu-avg.cpu-wait"
        }
      },
      {
        "match": "netuitive.collectd.cpu-avg.total-jiffies",
        "properties": {
          "expression": "data['netuitive.collectd.cpu-avg.cpu-idle'].actual + data['netuitive.collectd.cpu-avg.cpu-interrupt'].actual + data['netuitive.collectd.cpu-avg.cpu-nice'].actual + data['netuitive.collectd.cpu-avg.cpu-softirq'].actual + data['netuitive.collectd.cpu-avg.cpu-steal'].actual + data['netuitive.collectd.cpu-avg.cpu-system'].actual + data['netuitive.collectd.cpu-avg.cpu-user'].actual + data['netuitive.collectd.cpu-avg.cpu-wait'].actual",
          "fqn": "netuitive.collectd.cpu-avg.total-jiffies"
        }
      },
      {
        "match": "netuitive.collectd.cpu-avg.cpu-idle.percent",
        "properties": {
          "expression": "(data['netuitive.collectd.cpu-avg.cpu-idle'].actual / data['netuitive.collectd.cpu-avg.total-jiffies'].actual) * 100",
          "fqn": "netuitive.collectd.cpu-avg.cpu-idle.percent"
        }
      },
      {
        "match": "netuitive.collectd.cpu-avg.cpu-interrupt.percent",
        "properties": {
          "expression": "(data['netuitive.collectd.cpu-avg.cpu-interrupt'].actual / data['netuitive.collectd.cpu-avg.total-jiffies'].actual) * 100",
          "fqn": "netuitive.collectd.cpu-avg.cpu-interrupt.percent"
        }
      },
      {
        "match": "netuitive.collectd.cpu-avg.cpu-nice.percent",
        "properties": {
          "expression": "(data['netuitive.collectd.cpu-avg.cpu-nice'].actual / data['netuitive.collectd.cpu-avg.total-jiffies'].actual) * 100",
          "fqn": "netuitive.collectd.cpu-avg.cpu-nice.percent"
        }
      },
      {
        "match": "netuitive.collectd.cpu-avg.cpu-softirq.percent",
        "properties": {
          "expression": "(data['netuitive.collectd.cpu-avg.cpu-softirq'].actual / data['netuitive.collectd.cpu-avg.total-jiffies'].actual) * 100",
          "fqn": "netuitive.collectd.cpu-avg.cpu-softirq.percent"
        }
      },
      {
        "match": "netuitive.collectd.cpu-avg.cpu-steal.percent",
        "properties": {
          "expression": "(data['netuitive.collectd.cpu-avg.cpu-steal'].actual / data['netuitive.collectd.cpu-avg.total-jiffies'].actual) * 100",
          "fqn": "netuitive.collectd.cpu-avg.cpu-steal.percent"
        }
      },
      {
        "match": "netuitive.collectd.cpu-avg.cpu-system.percent",
        "properties": {
          "expression": "(data['netuitive.collectd.cpu-avg.cpu-system'].actual / data['netuitive.collectd.cpu-avg.total-jiffies'].actual) * 100",
          "fqn": "netuitive.collectd.cpu-avg.cpu-system.percent"
        }
      },
      {
        "match": "netuitive.collectd.cpu-avg.cpu-user.percent",
        "properties": {
          "expression": "(data['netuitive.collectd.cpu-avg.cpu-user'].actual / data['netuitive.collectd.cpu-avg.total-jiffies'].actual) * 100",
          "fqn": "netuitive.collectd.cpu-avg.cpu-user.percent"
        }
      },
      {
        "match": "netuitive.collectd.cpu-avg.cpu-wait.percent",
        "properties": {
          "expression": "(data['netuitive.collectd.cpu-avg.cpu-wait'].actual / data['netuitive.collectd.cpu-avg.total-jiffies'].actual) * 100",
          "fqn": "netuitive.collectd.cpu-avg.cpu-wait.percent"
        }
      },
      {
        "match": "netuitive.collectd.cpu-avg.cpu-total-utilization.percent",
        "properties": {
          "expression": "100 - data['netuitive.collectd.cpu-avg.cpu-idle.percent'].actual",
          "fqn": "netuitive.collectd.cpu-avg.cpu-total-utilization.percent"
        }
      },
      {
        "match": "netuitive.collectd.df.total-space",
        "properties": {
          "expression": "data['df-${1}.df_complex-free.value'].actual + data['df-${1}.df_complex-reserved.value'].actual + data['df-${1}.df_complex-used.value'].actual",
          "for": "df-(.*).df_complex-free",
          "fqn": "netuitive.collectd.df-${1}.total-space"
        }
      },
      {
        "match": "netuitive.collectd.df.used-percent",
        "properties": {
          "expression": "(data['df-${1}.df_complex-used.value'].actual / data['netuitive.collectd.df-${1}.total-space'].actual) * 100",
          "for": "df-(.*).df_complex-used",
          "fqn": "netuitive.collectd.df-${1}.used-percent"
        }
      },
      {
        "match": "netuitive.collectd.disk.disk_ops.readwrite",
        "properties": {
          "expression": "data['disk-${1}.disk_ops.read'].actual + data['disk-${1}.disk_ops.write'].actual",
          "for": "disk-(.*).disk_ops.read",
          "fqn": "netuitive.collectd.disk-${1}.disk_ops.readwrite"
        }
      },
      {
        "match": "netuitive.collectd.disk.disk_time.readwrite",
        "properties": {
          "expression": "((data['disk-${1}.disk_time.read'].actual * (data['disk-${1}.disk_ops.read'].actual * 300)) + (data['disk-${1}.disk_time.write'].actual * (data['disk-${1}.disk_ops.write'].actual * 300))) / data['netuitive.collectd.disk-${1}.disk_ops.total'].actual",
          "for": "disk-(.*).disk_time.read",
          "fqn": "netuitive.collectd.disk-${1}.disk_time.readwrite"
        }
      },
      {
        "match": "netuitive.collectd.disk.disk_busy.percent",
        "properties": {
          "expression": "(((data['disk-${1}.disk_ops.read'].actual * 300 * data['disk-${1}.disk_time.read'].actual) + (data['disk-${1}.disk_ops.write'].actual * 300 * data['disk-${1}.disk_time.write'].actual)) / (300000)) * 100",
          "for": "disk-(.*).disk_ops.read",
          "fqn": "netuitive.collectd.disk-${1}.disk_busy.percent"
        }
      },
      {
        "match": "netuitive.collectd.disk.disk_ops.total",
        "properties": {
          "expression": "(data['disk-${1}.disk_ops.read'].actual + data['disk-${1}.disk_ops.write'].actual) * 300",
          "for": "disk-(.*).disk_ops.read",
          "fqn": "netuitive.collectd.disk-${1}.disk_ops.total"
        }
      },
      {
        "match": "netuitive.collectd.interface.if_errors.total",
        "properties": {
          "expression": "(data['interface-${1}.if_errors.tx'].actual + data['interface-${1}.if_errors.rx'].actual)",
          "for": "interface-(.*).if_errors.tx",
          "fqn": "netuitive.collectd.interface-${1}.if_errors.total"
        }
      },
      {
        "match": "netuitive.collectd.interface.if_octets.total",
        "properties": {
          "expression": "(data['interface-${1}.if_octets.tx'].actual + data['interface-${1}.if_octets.rx'].actual)",
          "for": "interface-(.*).if_octets.tx",
          "fqn": "netuitive.collectd.interface-${1}.if_octets.total"
        }
      },
      {
        "match": "netuitive.collectd.interface.if_packets.total",
        "properties": {
          "expression": "(data['interface-${1}.if_packets.tx'].actual + data['interface-${1}.if_packets.rx'].actual)",
          "for": "interface-(.*).if_packets.tx",
          "fqn": "netuitive.collectd.interface-${1}.if_packets.total"
        }
      },
      {
        "match": "netuitive.collectd.interface.if_errors.percent",
        "properties": {
          "expression": "(data['netuitive.collectd.interface-${1}.if_errors.total'].actual / data['netuitive.collectd.interface-${1}.if_packets.total'].actual) * 100",
          "for": "interface-(.*).if_errors.tx",
          "fqn": "netuitive.collectd.interface-${1}.if_errors.percent"
        }
      }
    ],
    "name": "Collectd SERVER",
    "scope": {
      "elementType": "SERVER",
      "metricMatches": "(^cpu|^memory)\\..*\\.value$"
    },
    "type": "COMPUTED_METRIC"
  }
}